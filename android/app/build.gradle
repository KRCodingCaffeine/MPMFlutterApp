plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.google.gms.google-services"
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.mpm.member"
    compileSdk = 35
    ndkVersion = "26.1.10909125"

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.mpm.member"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = 35
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        ndk {
            abiFilters "arm64-v8a"
        }

    }
    signingConfigs {
        release {
            def keystorePropertiesFile = rootProject.file("keystore/mpm.properties")
            def keystoreProperties = new Properties()

            if (keystorePropertiesFile.exists()) {
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            } else {
                throw new GradleException("Missing gradle.properties file!")
            }

            storeFile rootProject.file(keystoreProperties["storeFile"])
            storePassword keystoreProperties["storePassword"]
            keyAlias keystoreProperties["keyAlias"]
            keyPassword keystoreProperties["keyPassword"]

            if (!storeFile || !storePassword || !keyAlias || !keyPassword) {
                throw new GradleException("Keystore configuration is incomplete!")
            }
        }
    }

    buildTypes {
        release {
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'
}

configurations.all {
    resolutionStrategy {
        // Force use of newer versions to avoid conflicts
        force 'com.google.android.play:core-common:2.0.3'
        force 'com.google.android.play:app-update:2.1.0'
        
        // Exclude old core library to prevent duplicates
        exclude group: 'com.google.android.play', module: 'core'
    }
}

flutter {
    source = "../.."
}
